/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutHocImport } from './routes/_layout-hoc'
import { Route as AuthHocImport } from './routes/_auth-hoc'
import { Route as WinderIndexImport } from './routes/winder/index'
import { Route as OpenIndexImport } from './routes/open/index'
import { Route as EmbedPostIdImport } from './routes/embed/$postId'
import { Route as LayoutHocSettingsHocImport } from './routes/_layout-hoc/_settings-hoc'
import { Route as LayoutHocHomeHocImport } from './routes/_layout-hoc/_home-hoc'
import { Route as AuthHocSignUpImport } from './routes/_auth-hoc/sign-up'
import { Route as AuthHocSignInImport } from './routes/_auth-hoc/sign-in'
import { Route as LayoutHocTermsIndexImport } from './routes/_layout-hoc/terms/index'
import { Route as LayoutHocPrivacyIndexImport } from './routes/_layout-hoc/privacy/index'
import { Route as LayoutHocModIndexImport } from './routes/_layout-hoc/mod/index'
import { Route as LayoutHocFeedIndexImport } from './routes/_layout-hoc/feed/index'
import { Route as LayoutHocCreateIndexImport } from './routes/_layout-hoc/create/index'
import { Route as LayoutHocHomeHocIndexImport } from './routes/_layout-hoc/_home-hoc/index'
import { Route as LayoutHocWatchPostIdImport } from './routes/_layout-hoc/watch/$postId'
import { Route as LayoutHocUHandleImport } from './routes/_layout-hoc/u/$handle'
import { Route as LayoutHocHomeHocFollowingImport } from './routes/_layout-hoc/_home-hoc/following'
import { Route as LayoutHocHomeHocExploreImport } from './routes/_layout-hoc/_home-hoc/explore'
import { Route as LayoutHocSettingsHocSettingsMeImport } from './routes/_layout-hoc/_settings-hoc/settings/me'

// Create/Update Routes

const LayoutHocRoute = LayoutHocImport.update({
  id: '/_layout-hoc',
  getParentRoute: () => rootRoute,
} as any)

const AuthHocRoute = AuthHocImport.update({
  id: '/_auth-hoc',
  getParentRoute: () => rootRoute,
} as any)

const WinderIndexRoute = WinderIndexImport.update({
  id: '/winder/',
  path: '/winder/',
  getParentRoute: () => rootRoute,
} as any)

const OpenIndexRoute = OpenIndexImport.update({
  id: '/open/',
  path: '/open/',
  getParentRoute: () => rootRoute,
} as any)

const EmbedPostIdRoute = EmbedPostIdImport.update({
  id: '/embed/$postId',
  path: '/embed/$postId',
  getParentRoute: () => rootRoute,
} as any)

const LayoutHocSettingsHocRoute = LayoutHocSettingsHocImport.update({
  id: '/_settings-hoc',
  getParentRoute: () => LayoutHocRoute,
} as any)

const LayoutHocHomeHocRoute = LayoutHocHomeHocImport.update({
  id: '/_home-hoc',
  getParentRoute: () => LayoutHocRoute,
} as any)

const AuthHocSignUpRoute = AuthHocSignUpImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => AuthHocRoute,
} as any)

const AuthHocSignInRoute = AuthHocSignInImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => AuthHocRoute,
} as any)

const LayoutHocTermsIndexRoute = LayoutHocTermsIndexImport.update({
  id: '/terms/',
  path: '/terms/',
  getParentRoute: () => LayoutHocRoute,
} as any)

const LayoutHocPrivacyIndexRoute = LayoutHocPrivacyIndexImport.update({
  id: '/privacy/',
  path: '/privacy/',
  getParentRoute: () => LayoutHocRoute,
} as any)

const LayoutHocModIndexRoute = LayoutHocModIndexImport.update({
  id: '/mod/',
  path: '/mod/',
  getParentRoute: () => LayoutHocRoute,
} as any)

const LayoutHocFeedIndexRoute = LayoutHocFeedIndexImport.update({
  id: '/feed/',
  path: '/feed/',
  getParentRoute: () => LayoutHocRoute,
} as any)

const LayoutHocCreateIndexRoute = LayoutHocCreateIndexImport.update({
  id: '/create/',
  path: '/create/',
  getParentRoute: () => LayoutHocRoute,
} as any)

const LayoutHocHomeHocIndexRoute = LayoutHocHomeHocIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutHocHomeHocRoute,
} as any)

const LayoutHocWatchPostIdRoute = LayoutHocWatchPostIdImport.update({
  id: '/watch/$postId',
  path: '/watch/$postId',
  getParentRoute: () => LayoutHocRoute,
} as any)

const LayoutHocUHandleRoute = LayoutHocUHandleImport.update({
  id: '/u/$handle',
  path: '/u/$handle',
  getParentRoute: () => LayoutHocRoute,
} as any)

const LayoutHocHomeHocFollowingRoute = LayoutHocHomeHocFollowingImport.update({
  id: '/following',
  path: '/following',
  getParentRoute: () => LayoutHocHomeHocRoute,
} as any)

const LayoutHocHomeHocExploreRoute = LayoutHocHomeHocExploreImport.update({
  id: '/explore',
  path: '/explore',
  getParentRoute: () => LayoutHocHomeHocRoute,
} as any)

const LayoutHocSettingsHocSettingsMeRoute =
  LayoutHocSettingsHocSettingsMeImport.update({
    id: '/settings/me',
    path: '/settings/me',
    getParentRoute: () => LayoutHocSettingsHocRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth-hoc': {
      id: '/_auth-hoc'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthHocImport
      parentRoute: typeof rootRoute
    }
    '/_layout-hoc': {
      id: '/_layout-hoc'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutHocImport
      parentRoute: typeof rootRoute
    }
    '/_auth-hoc/sign-in': {
      id: '/_auth-hoc/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof AuthHocSignInImport
      parentRoute: typeof AuthHocImport
    }
    '/_auth-hoc/sign-up': {
      id: '/_auth-hoc/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof AuthHocSignUpImport
      parentRoute: typeof AuthHocImport
    }
    '/_layout-hoc/_home-hoc': {
      id: '/_layout-hoc/_home-hoc'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutHocHomeHocImport
      parentRoute: typeof LayoutHocImport
    }
    '/_layout-hoc/_settings-hoc': {
      id: '/_layout-hoc/_settings-hoc'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutHocSettingsHocImport
      parentRoute: typeof LayoutHocImport
    }
    '/embed/$postId': {
      id: '/embed/$postId'
      path: '/embed/$postId'
      fullPath: '/embed/$postId'
      preLoaderRoute: typeof EmbedPostIdImport
      parentRoute: typeof rootRoute
    }
    '/open/': {
      id: '/open/'
      path: '/open'
      fullPath: '/open'
      preLoaderRoute: typeof OpenIndexImport
      parentRoute: typeof rootRoute
    }
    '/winder/': {
      id: '/winder/'
      path: '/winder'
      fullPath: '/winder'
      preLoaderRoute: typeof WinderIndexImport
      parentRoute: typeof rootRoute
    }
    '/_layout-hoc/_home-hoc/explore': {
      id: '/_layout-hoc/_home-hoc/explore'
      path: '/explore'
      fullPath: '/explore'
      preLoaderRoute: typeof LayoutHocHomeHocExploreImport
      parentRoute: typeof LayoutHocHomeHocImport
    }
    '/_layout-hoc/_home-hoc/following': {
      id: '/_layout-hoc/_home-hoc/following'
      path: '/following'
      fullPath: '/following'
      preLoaderRoute: typeof LayoutHocHomeHocFollowingImport
      parentRoute: typeof LayoutHocHomeHocImport
    }
    '/_layout-hoc/u/$handle': {
      id: '/_layout-hoc/u/$handle'
      path: '/u/$handle'
      fullPath: '/u/$handle'
      preLoaderRoute: typeof LayoutHocUHandleImport
      parentRoute: typeof LayoutHocImport
    }
    '/_layout-hoc/watch/$postId': {
      id: '/_layout-hoc/watch/$postId'
      path: '/watch/$postId'
      fullPath: '/watch/$postId'
      preLoaderRoute: typeof LayoutHocWatchPostIdImport
      parentRoute: typeof LayoutHocImport
    }
    '/_layout-hoc/_home-hoc/': {
      id: '/_layout-hoc/_home-hoc/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutHocHomeHocIndexImport
      parentRoute: typeof LayoutHocHomeHocImport
    }
    '/_layout-hoc/create/': {
      id: '/_layout-hoc/create/'
      path: '/create'
      fullPath: '/create'
      preLoaderRoute: typeof LayoutHocCreateIndexImport
      parentRoute: typeof LayoutHocImport
    }
    '/_layout-hoc/feed/': {
      id: '/_layout-hoc/feed/'
      path: '/feed'
      fullPath: '/feed'
      preLoaderRoute: typeof LayoutHocFeedIndexImport
      parentRoute: typeof LayoutHocImport
    }
    '/_layout-hoc/mod/': {
      id: '/_layout-hoc/mod/'
      path: '/mod'
      fullPath: '/mod'
      preLoaderRoute: typeof LayoutHocModIndexImport
      parentRoute: typeof LayoutHocImport
    }
    '/_layout-hoc/privacy/': {
      id: '/_layout-hoc/privacy/'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof LayoutHocPrivacyIndexImport
      parentRoute: typeof LayoutHocImport
    }
    '/_layout-hoc/terms/': {
      id: '/_layout-hoc/terms/'
      path: '/terms'
      fullPath: '/terms'
      preLoaderRoute: typeof LayoutHocTermsIndexImport
      parentRoute: typeof LayoutHocImport
    }
    '/_layout-hoc/_settings-hoc/settings/me': {
      id: '/_layout-hoc/_settings-hoc/settings/me'
      path: '/settings/me'
      fullPath: '/settings/me'
      preLoaderRoute: typeof LayoutHocSettingsHocSettingsMeImport
      parentRoute: typeof LayoutHocSettingsHocImport
    }
  }
}

// Create and export the route tree

interface AuthHocRouteChildren {
  AuthHocSignInRoute: typeof AuthHocSignInRoute
  AuthHocSignUpRoute: typeof AuthHocSignUpRoute
}

const AuthHocRouteChildren: AuthHocRouteChildren = {
  AuthHocSignInRoute: AuthHocSignInRoute,
  AuthHocSignUpRoute: AuthHocSignUpRoute,
}

const AuthHocRouteWithChildren =
  AuthHocRoute._addFileChildren(AuthHocRouteChildren)

interface LayoutHocHomeHocRouteChildren {
  LayoutHocHomeHocExploreRoute: typeof LayoutHocHomeHocExploreRoute
  LayoutHocHomeHocFollowingRoute: typeof LayoutHocHomeHocFollowingRoute
  LayoutHocHomeHocIndexRoute: typeof LayoutHocHomeHocIndexRoute
}

const LayoutHocHomeHocRouteChildren: LayoutHocHomeHocRouteChildren = {
  LayoutHocHomeHocExploreRoute: LayoutHocHomeHocExploreRoute,
  LayoutHocHomeHocFollowingRoute: LayoutHocHomeHocFollowingRoute,
  LayoutHocHomeHocIndexRoute: LayoutHocHomeHocIndexRoute,
}

const LayoutHocHomeHocRouteWithChildren =
  LayoutHocHomeHocRoute._addFileChildren(LayoutHocHomeHocRouteChildren)

interface LayoutHocSettingsHocRouteChildren {
  LayoutHocSettingsHocSettingsMeRoute: typeof LayoutHocSettingsHocSettingsMeRoute
}

const LayoutHocSettingsHocRouteChildren: LayoutHocSettingsHocRouteChildren = {
  LayoutHocSettingsHocSettingsMeRoute: LayoutHocSettingsHocSettingsMeRoute,
}

const LayoutHocSettingsHocRouteWithChildren =
  LayoutHocSettingsHocRoute._addFileChildren(LayoutHocSettingsHocRouteChildren)

interface LayoutHocRouteChildren {
  LayoutHocHomeHocRoute: typeof LayoutHocHomeHocRouteWithChildren
  LayoutHocSettingsHocRoute: typeof LayoutHocSettingsHocRouteWithChildren
  LayoutHocUHandleRoute: typeof LayoutHocUHandleRoute
  LayoutHocWatchPostIdRoute: typeof LayoutHocWatchPostIdRoute
  LayoutHocCreateIndexRoute: typeof LayoutHocCreateIndexRoute
  LayoutHocFeedIndexRoute: typeof LayoutHocFeedIndexRoute
  LayoutHocModIndexRoute: typeof LayoutHocModIndexRoute
  LayoutHocPrivacyIndexRoute: typeof LayoutHocPrivacyIndexRoute
  LayoutHocTermsIndexRoute: typeof LayoutHocTermsIndexRoute
}

const LayoutHocRouteChildren: LayoutHocRouteChildren = {
  LayoutHocHomeHocRoute: LayoutHocHomeHocRouteWithChildren,
  LayoutHocSettingsHocRoute: LayoutHocSettingsHocRouteWithChildren,
  LayoutHocUHandleRoute: LayoutHocUHandleRoute,
  LayoutHocWatchPostIdRoute: LayoutHocWatchPostIdRoute,
  LayoutHocCreateIndexRoute: LayoutHocCreateIndexRoute,
  LayoutHocFeedIndexRoute: LayoutHocFeedIndexRoute,
  LayoutHocModIndexRoute: LayoutHocModIndexRoute,
  LayoutHocPrivacyIndexRoute: LayoutHocPrivacyIndexRoute,
  LayoutHocTermsIndexRoute: LayoutHocTermsIndexRoute,
}

const LayoutHocRouteWithChildren = LayoutHocRoute._addFileChildren(
  LayoutHocRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof LayoutHocSettingsHocRouteWithChildren
  '/sign-in': typeof AuthHocSignInRoute
  '/sign-up': typeof AuthHocSignUpRoute
  '/embed/$postId': typeof EmbedPostIdRoute
  '/open': typeof OpenIndexRoute
  '/winder': typeof WinderIndexRoute
  '/explore': typeof LayoutHocHomeHocExploreRoute
  '/following': typeof LayoutHocHomeHocFollowingRoute
  '/u/$handle': typeof LayoutHocUHandleRoute
  '/watch/$postId': typeof LayoutHocWatchPostIdRoute
  '/': typeof LayoutHocHomeHocIndexRoute
  '/create': typeof LayoutHocCreateIndexRoute
  '/feed': typeof LayoutHocFeedIndexRoute
  '/mod': typeof LayoutHocModIndexRoute
  '/privacy': typeof LayoutHocPrivacyIndexRoute
  '/terms': typeof LayoutHocTermsIndexRoute
  '/settings/me': typeof LayoutHocSettingsHocSettingsMeRoute
}

export interface FileRoutesByTo {
  '': typeof LayoutHocSettingsHocRouteWithChildren
  '/sign-in': typeof AuthHocSignInRoute
  '/sign-up': typeof AuthHocSignUpRoute
  '/embed/$postId': typeof EmbedPostIdRoute
  '/open': typeof OpenIndexRoute
  '/winder': typeof WinderIndexRoute
  '/explore': typeof LayoutHocHomeHocExploreRoute
  '/following': typeof LayoutHocHomeHocFollowingRoute
  '/u/$handle': typeof LayoutHocUHandleRoute
  '/watch/$postId': typeof LayoutHocWatchPostIdRoute
  '/': typeof LayoutHocHomeHocIndexRoute
  '/create': typeof LayoutHocCreateIndexRoute
  '/feed': typeof LayoutHocFeedIndexRoute
  '/mod': typeof LayoutHocModIndexRoute
  '/privacy': typeof LayoutHocPrivacyIndexRoute
  '/terms': typeof LayoutHocTermsIndexRoute
  '/settings/me': typeof LayoutHocSettingsHocSettingsMeRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth-hoc': typeof AuthHocRouteWithChildren
  '/_layout-hoc': typeof LayoutHocRouteWithChildren
  '/_auth-hoc/sign-in': typeof AuthHocSignInRoute
  '/_auth-hoc/sign-up': typeof AuthHocSignUpRoute
  '/_layout-hoc/_home-hoc': typeof LayoutHocHomeHocRouteWithChildren
  '/_layout-hoc/_settings-hoc': typeof LayoutHocSettingsHocRouteWithChildren
  '/embed/$postId': typeof EmbedPostIdRoute
  '/open/': typeof OpenIndexRoute
  '/winder/': typeof WinderIndexRoute
  '/_layout-hoc/_home-hoc/explore': typeof LayoutHocHomeHocExploreRoute
  '/_layout-hoc/_home-hoc/following': typeof LayoutHocHomeHocFollowingRoute
  '/_layout-hoc/u/$handle': typeof LayoutHocUHandleRoute
  '/_layout-hoc/watch/$postId': typeof LayoutHocWatchPostIdRoute
  '/_layout-hoc/_home-hoc/': typeof LayoutHocHomeHocIndexRoute
  '/_layout-hoc/create/': typeof LayoutHocCreateIndexRoute
  '/_layout-hoc/feed/': typeof LayoutHocFeedIndexRoute
  '/_layout-hoc/mod/': typeof LayoutHocModIndexRoute
  '/_layout-hoc/privacy/': typeof LayoutHocPrivacyIndexRoute
  '/_layout-hoc/terms/': typeof LayoutHocTermsIndexRoute
  '/_layout-hoc/_settings-hoc/settings/me': typeof LayoutHocSettingsHocSettingsMeRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/sign-in'
    | '/sign-up'
    | '/embed/$postId'
    | '/open'
    | '/winder'
    | '/explore'
    | '/following'
    | '/u/$handle'
    | '/watch/$postId'
    | '/'
    | '/create'
    | '/feed'
    | '/mod'
    | '/privacy'
    | '/terms'
    | '/settings/me'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/sign-in'
    | '/sign-up'
    | '/embed/$postId'
    | '/open'
    | '/winder'
    | '/explore'
    | '/following'
    | '/u/$handle'
    | '/watch/$postId'
    | '/'
    | '/create'
    | '/feed'
    | '/mod'
    | '/privacy'
    | '/terms'
    | '/settings/me'
  id:
    | '__root__'
    | '/_auth-hoc'
    | '/_layout-hoc'
    | '/_auth-hoc/sign-in'
    | '/_auth-hoc/sign-up'
    | '/_layout-hoc/_home-hoc'
    | '/_layout-hoc/_settings-hoc'
    | '/embed/$postId'
    | '/open/'
    | '/winder/'
    | '/_layout-hoc/_home-hoc/explore'
    | '/_layout-hoc/_home-hoc/following'
    | '/_layout-hoc/u/$handle'
    | '/_layout-hoc/watch/$postId'
    | '/_layout-hoc/_home-hoc/'
    | '/_layout-hoc/create/'
    | '/_layout-hoc/feed/'
    | '/_layout-hoc/mod/'
    | '/_layout-hoc/privacy/'
    | '/_layout-hoc/terms/'
    | '/_layout-hoc/_settings-hoc/settings/me'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthHocRoute: typeof AuthHocRouteWithChildren
  LayoutHocRoute: typeof LayoutHocRouteWithChildren
  EmbedPostIdRoute: typeof EmbedPostIdRoute
  OpenIndexRoute: typeof OpenIndexRoute
  WinderIndexRoute: typeof WinderIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthHocRoute: AuthHocRouteWithChildren,
  LayoutHocRoute: LayoutHocRouteWithChildren,
  EmbedPostIdRoute: EmbedPostIdRoute,
  OpenIndexRoute: OpenIndexRoute,
  WinderIndexRoute: WinderIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth-hoc",
        "/_layout-hoc",
        "/embed/$postId",
        "/open/",
        "/winder/"
      ]
    },
    "/_auth-hoc": {
      "filePath": "_auth-hoc.tsx",
      "children": [
        "/_auth-hoc/sign-in",
        "/_auth-hoc/sign-up"
      ]
    },
    "/_layout-hoc": {
      "filePath": "_layout-hoc.tsx",
      "children": [
        "/_layout-hoc/_home-hoc",
        "/_layout-hoc/_settings-hoc",
        "/_layout-hoc/u/$handle",
        "/_layout-hoc/watch/$postId",
        "/_layout-hoc/create/",
        "/_layout-hoc/feed/",
        "/_layout-hoc/mod/",
        "/_layout-hoc/privacy/",
        "/_layout-hoc/terms/"
      ]
    },
    "/_auth-hoc/sign-in": {
      "filePath": "_auth-hoc/sign-in.tsx",
      "parent": "/_auth-hoc"
    },
    "/_auth-hoc/sign-up": {
      "filePath": "_auth-hoc/sign-up.tsx",
      "parent": "/_auth-hoc"
    },
    "/_layout-hoc/_home-hoc": {
      "filePath": "_layout-hoc/_home-hoc.tsx",
      "parent": "/_layout-hoc",
      "children": [
        "/_layout-hoc/_home-hoc/explore",
        "/_layout-hoc/_home-hoc/following",
        "/_layout-hoc/_home-hoc/"
      ]
    },
    "/_layout-hoc/_settings-hoc": {
      "filePath": "_layout-hoc/_settings-hoc.tsx",
      "parent": "/_layout-hoc",
      "children": [
        "/_layout-hoc/_settings-hoc/settings/me"
      ]
    },
    "/embed/$postId": {
      "filePath": "embed/$postId.tsx"
    },
    "/open/": {
      "filePath": "open/index.tsx"
    },
    "/winder/": {
      "filePath": "winder/index.tsx"
    },
    "/_layout-hoc/_home-hoc/explore": {
      "filePath": "_layout-hoc/_home-hoc/explore.tsx",
      "parent": "/_layout-hoc/_home-hoc"
    },
    "/_layout-hoc/_home-hoc/following": {
      "filePath": "_layout-hoc/_home-hoc/following.tsx",
      "parent": "/_layout-hoc/_home-hoc"
    },
    "/_layout-hoc/u/$handle": {
      "filePath": "_layout-hoc/u/$handle.tsx",
      "parent": "/_layout-hoc"
    },
    "/_layout-hoc/watch/$postId": {
      "filePath": "_layout-hoc/watch/$postId.tsx",
      "parent": "/_layout-hoc"
    },
    "/_layout-hoc/_home-hoc/": {
      "filePath": "_layout-hoc/_home-hoc/index.tsx",
      "parent": "/_layout-hoc/_home-hoc"
    },
    "/_layout-hoc/create/": {
      "filePath": "_layout-hoc/create/index.tsx",
      "parent": "/_layout-hoc"
    },
    "/_layout-hoc/feed/": {
      "filePath": "_layout-hoc/feed/index.tsx",
      "parent": "/_layout-hoc"
    },
    "/_layout-hoc/mod/": {
      "filePath": "_layout-hoc/mod/index.tsx",
      "parent": "/_layout-hoc"
    },
    "/_layout-hoc/privacy/": {
      "filePath": "_layout-hoc/privacy/index.tsx",
      "parent": "/_layout-hoc"
    },
    "/_layout-hoc/terms/": {
      "filePath": "_layout-hoc/terms/index.tsx",
      "parent": "/_layout-hoc"
    },
    "/_layout-hoc/_settings-hoc/settings/me": {
      "filePath": "_layout-hoc/_settings-hoc/settings/me.tsx",
      "parent": "/_layout-hoc/_settings-hoc"
    }
  }
}
ROUTE_MANIFEST_END */
